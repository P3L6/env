// Place your key bindings in this file to override the defaults
[
    // BEGIN import from vscode-xcode-keybindings
    {
        "key": "cmd+e",
        "command": "editor.action.addSelectionToNextFindMatch"
    },
    {
        "key": "cmd+shift+j",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "shift+cmd+]",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "shift+cmd+[",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "cmd+shift+y",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "cmd+shift+o",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "shift+cmd+9",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "shift+cmd+0",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "cmd+1",
        "command": "workbench.view.explorer"
    },
    {
        "key": "cmd+2",
        "command": "workbench.view.search"
    },
    {
        "key": "cmd+3",
        "command": "workbench.view.scm"
    },
    {
        "key": "cmd+4",
        "command": "workbench.view.debug"
    },
    {
        "key": "cmd+5",
        "command": "workbench.view.extensions"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.start",
        "when": "!inDebugMode"
    },
    {
        "key": "cmd+r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+.",
        "command": "workbench.action.debug.stop",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+b",
        "command": "workbench.action.tasks.build"
    },
    {
        "key": "cmd+u",
        "command": "workbench.action.tasks.test"
    },
    {
        "key": "cmd+0",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+cmd+left",
        "command": "editor.fold"
    },
    {
        "key": "alt+cmd+right",
        "command": "editor.unfold"
    },
    {
        "key": "ctrl+cmd+e",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.gotoLine",
        "when": "textInputFocus"
    },
    // END import from vscode-xcode-keybindings
    // BEGIN import from vscode-atom-keybindings
    {
        "key": "a",
        "when": "filesExplorerFocus && !inputFocus",
        "command": "explorer.newFile"
    },
    {
        "key": "shift+a",
        "when": "filesExplorerFocus && !inputFocus",
        "command": "explorer.newFolder"
    },
    // END import from vscode-xcode-keybindings
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+d",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+d",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "alt+cmd+c",
        "command": "workbench.view.scm"
    },
    {
        "key": "escape",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && !editorHasMultipleSelections"
    },
    {
        "key": "alt+cmd+e",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+i",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+i",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+t",
        "command": "-editor.action.transposeLetters",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "f17",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f18",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f19",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f16",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f",
        "command": "list.toggleKeyboardNavigation",
        "when": "filesExplorerFocus && !inputFocus"
    },
    {
        "key": "alt+w",
        "command": "editor.emmet.action.wrapWithAbbreviation",
        "when": "editorHasSelection"
    },
    {
        "key": "shift+alt+w",
        "command": "editor.emmet.action.wrapIndividualLinesWithAbbreviation",
        "when": "editorHasSelection"
    },
    {
        "key": "pageup",
        "command": "-cursorPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "pageup",
        "command": "scrollPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "-cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+y",
        "command": "workbench.action.keepEditor"
    },
    {
        "key": "alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        // Another advantage of setting this is that it disables chords
        "key": "cmd+k",
        "command": "bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "search.action.openNewEditor"
    },
    {
        "key": "alt+cmd+k",
        "command": "bookmarksExplorer.focus"
    }
]

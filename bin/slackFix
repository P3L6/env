#! /bin/bash

echo "This command is no longer functional! If you type /slackdevtools into any chat though, you can hack around."
exit 1

set -e

SLACK_RESOURCES_DIR="/Applications/Slack.app/Contents/Resources"
SLACK_FILE_PATH_4="${SLACK_RESOURCES_DIR}"/app.asar.unpacked/dist/ssb-interop.bundle.js

sudo npx asar extract "${SLACK_RESOURCES_DIR}"/app.asar "${SLACK_RESOURCES_DIR}"/app.asar.unpacked
sudo tee -a "${SLACK_FILE_PATH_4}" > /dev/null << "EOF"
// First make sure the wrapper app is loaded
document.addEventListener("DOMContentLoaded", function() {

   // Then get its webviews
   let webviews = document.querySelectorAll(".TeamView webview");

   let customCSS = `
   .p-channel_sidebar__navigation_bar {
     display: none;
   } `

   // Insert a style tag into the wrapper view
   let s = document.createElement('style');
   s.type = 'text/css';
   s.innerHTML = customCSS;
   document.head.appendChild(s);

   // Wait for each webview to load
   webviews.forEach(webview => {
      webview.addEventListener('ipc-message', message => {
         if (message.channel == 'didFinishLoading')
            // Finally add the CSS into the webview
            cssPromise.then(css => {
               let script = `
                     let s = document.createElement('style');
                     s.type = 'text/css';
                     s.id = 'slack-custom-css';
                     s.innerHTML = \`${css + customCustomCSS}\`;
                     document.head.appendChild(s);
                     `
               webview.executeJavaScript(script);
            })
      });
   });
});
EOF

sudo npx asar pack "${SLACK_RESOURCES_DIR}"/app.asar.unpacked "${SLACK_RESOURCES_DIR}"/app.asar

# strip the attribute saying slack has been damaged
xattr -cr /Applications/Slack.app

